--Formatiert mit https://www.dpriver.com/pp/sqlformat.htm


--LJ 1 SELECT Abfragen

--(1)Lassen Sie sich alle Personendaten anzeigen.
SELECT *
FROM   person; 

+----------------+---------------+---------+--------------------+----------------+-------+-------------+--------------+
| personennummer | nachname      | vorname | strasse            | ort            | plz   | land        | geburtsdatum |
+----------------+---------------+---------+--------------------+----------------+-------+-------------+--------------+
|              1 | Blotzek       | Ulrich  | Großkopf 4         | Arnsberg       | 59823 | Deutschland | 1960-10-05   |
|              2 | Schatter      | Peter   | Försterstrasse 56  | Augsburg       | 86179 | Deutschland | 1980-01-01   |
|              3 | Wojack        | Albert  | Westendstrasse 92  | Berlin         | 12234 | Deutschland | 1955-06-15   |
|              4 | Virtanen      | Veera   | Oyi Keilasatama 21 | Espoo          |  2150 | Finnland    | 1992-12-30   |
|              5 | Hämäläinen    | Ahvo    | Tapulikuja 56      | Forssa         | 30100 | Finnland    | 1977-04-23   |
|              6 | Huisman       | Fenna   | Spoordreef 87      | Almere         |  1315 | Niederlande | 1971-08-17   |
|              7 | Prins         | Lieke   | Noordgeest 21      | Bergen op Zoom |  4600 | Niederlande | 1987-05-08   |
|              8 | David         | Paula   | Murielstrasse 47   | Klagenfurt     |  9020 | Österreich  | 1970-01-21   |
|              9 | Hardiff       | Joseph  | Bischofstrasse 139 | Klagenfurt     |  9200 | Österreich  | 1962-08-09   |
+----------------+---------------+---------+--------------------+----------------+-------+-------------+--------------+


--(2)Lassen Sie sich in der angegebenen Reihenfolge den Vornamen, den Nachnamen, das Geburtsdatum und den Wohnort aller Personen anzeigen.

SELECT vorname,
       nachname,
       geburtsdatum,
       ort
FROM   person; 

+---------+---------------+--------------+----------------+
| Vorname | Nachname      | Geburtsdatum | ort            |
+---------+---------------+--------------+----------------+
| Ulrich  | Blotzek       | 1960-10-05   | Arnsberg       |
| Peter   | Schatter      | 1980-01-01   | Augsburg       |
| Albert  | Wojack        | 1955-06-15   | Berlin         |
| Veera   | Virtanen      | 1992-12-30   | Espoo          |
| Ahvo    | Hämäläinen    | 1977-04-23   | Forssa         |
| Fenna   | Huisman       | 1971-08-17   | Almere         |
| Lieke   | Prins         | 1987-05-08   | Bergen op Zoom |
| Paula   | David         | 1970-01-21   | Klagenfurt     |
| Joseph  | Hardiff       | 1962-08-09   | Klagenfurt     |
+---------+---------------+--------------+----------------+


--(3)Lassen Sie sich alle Wohnorte anzeigen. Unterdrücken Sie dabei die Mehrfachanzeige identischer Wohnorte. 

SELECT DISTINCT ort
FROM   person; 

+----------------+
| ort            |
+----------------+
| Arnsberg       |
| Augsburg       |
| Berlin         |
| Espoo          |
| Forssa         |
| Almere         |
| Bergen op Zoom |
| Klagenfurt     |
+----------------+

--(4)Lassen Sie sich in der angegebenen Reihenfolge den Vornamen, den Nachnamen, die Postleitzahl und den Wohnort aller Personen ausgeben. 
--	Sortieren Sie Nachname und Vorname in alphabetischer Reihenfolge.

SELECT vorname,
       nachname,
       plz,
       ort
FROM   person
ORDER  BY nachname ASC,
          vorname ASC; 
		  

+---------+---------------+-------+----------------+
| vorname | nachname      | plz   | ort            |
+---------+---------------+-------+----------------+
| Ulrich  | Blotzek       | 59823 | Arnsberg       |
| Paula   | David         |  9020 | Klagenfurt     |
| Ahvo    | Hämäläinen    | 30100 | Forssa         |
| Joseph  | Hardiff       |  9200 | Klagenfurt     |
| Fenna   | Huisman       |  1315 | Almere         |
| Lieke   | Prins         |  4600 | Bergen op Zoom |
| Peter   | Schatter      | 86179 | Augsburg       |
| Veera   | Virtanen      |  2150 | Espoo          |
| Albert  | Wojack        | 12234 | Berlin         |
+---------+---------------+-------+----------------+


--(5)Lassen Sie sich in der angegebenen Reihenfolge den Nachnamen, den Wohnort, PLZ sowie das Land aller Personen anzeigen. 
--	Verwenden Sie in der Ergebnistabelle den Spaltennamen: Name, Land, Wohnort und Postleitzahl.

SELECT nachname AS Name,
       ort      AS Wohnort,
       plz      AS Postleitzahl,
       land     AS Land
FROM   person; 

+---------------+----------------+--------------+-------------+
| Name          | Wohnort        | Postleitzahl | Land        |
+---------------+----------------+--------------+-------------+
| Blotzek       | Arnsberg       |        59823 | Deutschland |
| Schatter      | Augsburg       |        86179 | Deutschland |
| Wojack        | Berlin         |        12234 | Deutschland |
| Virtanen      | Espoo          |         2150 | Finnland    |
| Hämäläinen    | Forssa         |        30100 | Finnland    |
| Huisman       | Almere         |         1315 | Niederlande |
| Prins         | Bergen op Zoom |         4600 | Niederlande |
| David         | Klagenfurt     |         9020 | Österreich  |
| Hardiff       | Klagenfurt     |         9200 | Österreich  |
+---------------+----------------+--------------+-------------+


--Formatiert mit https://www.dpriver.com/pp/sqlformat.htm

--LJ 2

--(1)Lassen Sie sich alle Artikeldaten anzeigen.

SELECT *
FROM   artikel; 

+---------------+------------------+-------------+--------+
| artikelnummer | herstellernummer | artikelname | preis  |
+---------------+------------------+-------------+--------+
|             1 |               10 | Maus        |  10.00 |
|             2 |               10 | Tastatur    |  20.00 |
|             3 |               50 | Drucker     | 300.00 |
|             4 |               30 | Festplatte  | 400.00 |
|             5 |               20 | Monitor     | 500.00 |
+---------------+------------------+-------------+--------+

--(2)Lassen Sie sich alle Artikelnamen, die dazugehörigen Preise (Netto) und die Preise mit einem Aufschlag von 19% (Brutto) anzeigen.
--	Benennen Sie in der Ausgabe die entsprechenden Tabellenspalten Artikel, Nettopreis und Bruttopreis.

SELECT artikelname            AS Artikel,
       preis                  AS Nettopreis,
       Round(preis * 1.19, 2) AS Bruttopreis
FROM   artikel; 

+------------+------------+-------------+
| Artikel    | Nettopreis | Bruttopreis |
+------------+------------+-------------+
| Maus       |      10.00 |       11.90 |
| Tastatur   |      20.00 |       23.80 |
| Drucker    |     300.00 |      357.00 |
| Festplatte |     400.00 |      476.00 |
| Monitor    |     500.00 |      595.00 |
+------------+------------+-------------+

--(3)Welche Bestellsumme pro Artikel entsteht, wenn Sie von jedem Artikel 50 Stück bestellen. 
--	Lassen Sie sich Artikelname, Einzelpreis und Gesamtpreis anzeigen. 
--	Benennen Sie die entsprechenden Tabellenspalten Artikel, Einzelpreis, Gesamtpreis

SELECT artikelname          AS Artikel,
       preis                AS Einzelpreis,
       Round(preis * 50, 2) AS Gesamtpreis
FROM   artikel; 

+------------+-------------+-------------+
| Artikel    | Einzelpreis | Gesamtpreis |
+------------+-------------+-------------+
| Maus       |       10.00 |      500.00 |
| Tastatur   |       20.00 |     1000.00 |
| Drucker    |      300.00 |    15000.00 |
| Festplatte |      400.00 |    20000.00 |
| Monitor    |      500.00 |    25000.00 |
+------------+-------------+-------------+


--Formatiert mit https://www.dpriver.com/pp/sqlformat.htm

-- LJ 3

--(1)Lassen Sie sich die Personendaten aller Personen anzeigen, die in Berlin wohnen.
SELECT vorname,
       nachname,
       ort
FROM   person
WHERE  ort <> 'Berlin'; 
	
+---------+---------------+----------------+
| vorname | nachname      | ort            |
+---------+---------------+----------------+
| Ulrich  | Blotzek       | Arnsberg       |
| Peter   | Schatter      | Augsburg       |
| Veera   | Virtanen      | Espoo          |
| Ahvo    | Hämäläinen    | Forssa         |
| Fenna   | Huisman       | Almere         |
| Lieke   | Prins         | Bergen op Zoom |
| Paula   | David         | Klagenfurt     |
| Joseph  | Hardiff       | Klagenfurt     |
+---------+---------------+----------------+

--(2)Lassen Sie sich die Vornamen, Nachnamen und Wohnorte aller Personen anzeigen, die entweder in Berlin oder in Klagenfurt wohnen.

SELECT vorname,
       nachname,
       ort
FROM   person
WHERE  ort = 'Berlin'
        OR ort = 'Klagenfurt'; 
		
+---------+----------+------------+
| vorname | nachname | ort        |
+---------+----------+------------+
| Albert  | Wojack   | Berlin     |
| Paula   | David    | Klagenfurt |
| Joseph  | Hardiff  | Klagenfurt |
+---------+----------+------------+

--(3)Lassen Sie sich die Vornamen, Nachnamen und Wohnorte aller Personen anzeigen, die nicht in Berlin wohnen.

SELECT vorname,
       nachname,
       ort
FROM   person
WHERE  ort <> 'Berlin'; 

+---------+---------------+----------------+
| vorname | nachname      | ort            |
+---------+---------------+----------------+
| Ulrich  | Blotzek       | Arnsberg       |
| Peter   | Schatter      | Augsburg       |
| Veera   | Virtanen      | Espoo          |
| Ahvo    | Hämäläinen    | Forssa         |
| Fenna   | Huisman       | Almere         |
| Lieke   | Prins         | Bergen op Zoom |
| Paula   | David         | Klagenfurt     |
| Joseph  | Hardiff       | Klagenfurt     |
+---------+---------------+----------------+

--(4)Lassen Sie sich die Nachnamen, Wohnorte und Geburtsdaten aller Personen anzeigen, die in Deutschland wohnen und nach dem 01.06.1960 geboren worden sind.

SELECT nachname,
       ort,
       geburtsdatum
FROM   person
WHERE  land = 'Deutschland'
       AND geburtsdatum > '1960-06-01'; 
	   
+----------+----------+--------------+
| nachname | ort      | geburtsdatum |
+----------+----------+--------------+
| Blotzek  | Arnsberg | 1960-10-05   |
| Schatter | Augsburg | 1980-01-01   |
+----------+----------+--------------+


--Formatiert mit https://www.dpriver.com/pp/sqlformat.htm

-- LJ 4

-- (1)Lassen Sie sich von allen Artikeln, die mehr als 300 kosten, den Artikelnamen, den Preis und einen um 20 % erhöhten Preis ausgeben. 
--	Runden Sie den berechneten Preis auf zwei Nachkommastellen. Nennen Sie die Tabellenspalten der Ergebnistabelle Artikel, Nettopreis und Neupreis.

SELECT artikelname            AS Artikel,
       preis                  AS Nettopreis,
       Round (preis * 1.2, 2) AS Neupreis
FROM   artikel
WHERE  preis > 300; 

+------------+------------+----------+
| Artikel    | Nettopreis | Neupreis |
+------------+------------+----------+
| Festplatte |     400.00 |   480.00 |
| Monitor    |     500.00 |   600.00 |
+------------+------------+----------+

--(2)Ermitteln Sie den durchschnittlichen Preis von Tastatur, Drucker und Festplatte. 
-- Nennen Sie die Tabellenspalte der Ergebnistabelle Durchschnittspreis.
SELECT Round(Avg(preis), 2) AS Durchschnittspreis
FROM   artikel
WHERE  artikelname IN ( 'Tastatur', 'Drucker', 'Festplatte' ); 

+--------------------+
| Durchschnittspreis |
+--------------------+
|             240.00 |
+--------------------+

--(3)Ermitteln Sie die Anzahl aller Artikel, die vom Hersteller mit der Herstellernummer 10 angeboten werden. 
--	Nennen Sie die Tabellenspalte der Ergebnistabelle Artikelanzahl.

SELECT Count(*) AS Artikelanzahl
FROM   artikel
WHERE  herstellernummer = 10; 

+---------------+
| Artikelanzahl |
+---------------+
|             2 |
+---------------+

--(4)Ermitteln Sie den Gesamtpreis, wenn Sie jeweils 5 Artikel des Herstellers mit der Herstellernummer 10 kaufen würden.
--	Nennen Sie die Tabellenspalte der Ergebnistabelle Gesamtpreis.

SELECT Sum(preis * 5) AS Gesamtpreis
FROM   artikel
WHERE  herstellernummer = 10; 

+-------------+
| Gesamtpreis |
+-------------+
|      150.00 |
+-------------+

--(5)Ermitteln Sie den billigsten und den teuersten Artikel. Nennen Sie die Tabellenspalten der Ergebnistabelle Billig und Teuer.

SELECT Min(preis) AS Billig,
       Max(preis) AS Teuer
FROM   artikel; 

+--------+--------+
| Billig | Teuer  |
+--------+--------+
|  10.00 | 500.00 |
+--------+--------+

--Formatiert mit https://www.dpriver.com/pp/sqlformat.htm

--LJ 5.1

--(1)Lassen Sie sich bis auf die Artikelnummer alle Artikeldaten der Hersteller mit der Herstellernummer 10, 30 und 50 anzeigen.

SELECT herstellernummer,
       artikelname,
       preis
FROM   artikel
WHERE  herstellernummer IN ( 10, 30, 50 ); 

+------------------+-------------+--------+
| herstellernummer | artikelname | preis  |
+------------------+-------------+--------+
|               10 | Maus        |  10.00 |
|               10 | Tastatur    |  20.00 |
|               50 | Drucker     | 300.00 |
|               30 | Festplatte  | 400.00 |
+------------------+-------------+--------+

--(2)Lassen Sie sich alle Artikelnamen und die dazugehörigen Artikelpreise ausgeben, die zwischen 200 und 400 liegen.

SELECT artikelname,
       preis
FROM   artikel
WHERE  preis BETWEEN 200 AND 400; 

+-------------+--------+
| Artikelname | Preis  |
+-------------+--------+
| Drucker     | 300.00 |
| Festplatte  | 400.00 |
+-------------+--------+

--(3)Lassen Sie sich alle Artikelnamen und dazugehörigen Artikelpreise ausgeben, deren Name mit dem Buchstaben M beginnt.

SELECT artikelname,
       preis
FROM   artikel
WHERE  artikelname LIKE 'M%'; 

+-------------+--------+
| Artikelname | Preis  |
+-------------+--------+
| Maus        |  10.00 |
| Monitor     | 500.00 |
+-------------+--------+

--LJ 5.2

--(1)Lassen Sie sich die Herstellernamen und die dazugehörigen Länder anzeigen.

SELECT herstellername,
       land
FROM   hersteller; 

+-----------------+-------------+
| herstellername  | land        |
+-----------------+-------------+
| Logitech        | Schweiz     |
| SONY            | Japan       |
| Maxtor          | USA         |
| Medion          | Deutschland |
| Hewlett Packard | USA         |
+-----------------+-------------+


--(2)Lassen Sie sich alle Herstellernamen und die dazugehörigen Länder anzeigen, die Hersteller beginnen mit dem Buchstaben M und sind nicht aus Japan sind.

SELECT herstellername,
       land
FROM   hersteller
WHERE  herstellername LIKE 'M%'
       AND land != 'Japan'; 

+----------------+-------------+
| herstellername | land        |
+----------------+-------------+
| Maxtor         | USA         |
| Medion         | Deutschland |
+----------------+-------------+

--(3)Lassen Sie sich alle Herstellernamen und die dazugehörigen Länder anzeigen, die nicht mit dem Buchstaben M beginnen und entweder aus Deutschland oder den USA sind.

SELECT herstellername,
       land
FROM   hersteller
WHERE  herstellername NOT LIKE 'M%'
       AND ( land = 'Deutschland'
              OR land = 'USA' ); 
			  
			  
+-----------------+------+
| herstellername  | land |
+-----------------+------+
| Hewlett Packard | USA  |
+-----------------+------+

--Formatiert mit https://www.dpriver.com/pp/sqlformat.htm

--LJ 6

--(1)Geben Sie in jeweils einer Spalte einer Ergebnistabelle den Namen einer Person bestehend aus Vornamen und Nachnamen sowie die Anschrift bestehend aus Postleitzahl und Ort aus. 
--Fügen Sie in der Ausgabe zwischen Vornamen und Nachnamen sowie zwischen Postleitzahl und Ort ein Leerzeichen ein. Nennen Sie die Spalten der Ergebnistabelle Name und Anschrift.

SELECT Concat(vorname, ' ', nachname) AS NAME,
       Concat(plz, ' ', ort)          AS Anschrift
FROM   person; 

+--------------------+---------------------+
| NAME               | Anschrift           |
+--------------------+---------------------+
| Ulrich Blotzek     | 59823 Arnsberg      |
| Peter Schatter     | 86179 Augsburg      |
| Albert Wojack      | 12234 Berlin        |
| Veera Virtanen     | 2150 Espoo          |
| Ahvo Hämäläinen    | 30100 Forssa        |
| Fenna Huisman      | 1315 Almere         |
| Lieke Prins        | 4600 Bergen op Zoom |
| Paula David        | 9020 Klagenfurt     |
| Joseph Hardiff     | 9200 Klagenfurt     |
+--------------------+---------------------+

--ACHTUNG:
SELECT vorname
       || ' '
       || nachname AS NAME,
       plz
       || ' '
       || ort      AS Anschrift
FROM   person; 
--Funktioniert nicht!

--(2)Ermitteln Sie die Länge aller Ortsnamen und geben Sie Ortsnamen und Länge in einer Ergebnistabelle aus. 
--Nennen Sie die Spalten der Ergebnistabelle «Ortsname» und «Ortsnamenlänge». Unterdrücken Sie die Mehrfachanzeige identischer Ortsangaben.

SELECT DISTINCT ort         AS Ortsname,
                Length(ort) AS Ortsnamenlänge
FROM   person
ORDER  BY Length(ort) ASC; 

+----------------+-----------------+
| Ortsname       | Ortsnamenlänge  |
+----------------+-----------------+
| Espoo          |               5 |
| Almere         |               6 |
| Berlin         |               6 |
| Forssa         |               6 |
| Arnsberg       |               8 |
| Augsburg       |               8 |
| Klagenfurt     |              10 |
| Bergen op Zoom |              14 |
+----------------+-----------------+

--(3)Ermitteln Sie das Alter aller Personen der Tabelle 'person'. Lassen Sie sich das Alter, den Vornamen, den Nachnamen und das Geburtsdatum jeder Person anzeigen. 
--Nennen Sie die Spalte der Ergebnistabelle, die die Altersangaben enthält, Lebensalter.

SELECT Floor(Datediff(Curdate(), geburtsdatum) / 365) AS lebensalter, vorname,
nachname, geburtsdatum
FROM   person; 

--DATEDIFF(CURDATE(), Geburtsdatum) = Differenz in Tagen zwischen dem aktuellen Datum (CURDATE()) und dem Geburtsdatum jeder Person
--FLOOR(... / 365) teilt Differenz durch 365 und rundet auf die nächst niedrigere ganze Zahl ab
+-------------+---------+---------------+--------------+
| Lebensalter | Vorname | Nachname      | Geburtsdatum |
+-------------+---------+---------------+--------------+
|          63 | Ulrich  | Blotzek       | 1960-10-05   |
|          44 | Peter   | Schatter      | 1980-01-01   |
|          68 | Albert  | Wojack        | 1955-06-15   |
|          31 | Veera   | Virtanen      | 1992-12-30   |
|          47 | Ahvo    | Hämäläinen    | 1977-04-23   |
|          52 | Fenna   | Huisman       | 1971-08-17   |
|          37 | Lieke   | Prins         | 1987-05-08   |
|          54 | Paula   | David         | 1970-01-21   |
|          61 | Joseph  | Hardiff       | 1962-08-09   |
+-------------+---------+---------------+--------------+

--Formatiert mit https://www.dpriver.com/pp/sqlformat.htm

--LJ 7

-- (1) Ermitteln Sie aus allen Bestellungen der Tabelle 'bestellung' die Anzahl der Bestellungen für jeden Artikel und die daraus resultierende Gesamtbestellsumme pro Artikel.
-- Berücksichtigen Sie dabei nur Gesamtbestellsummen, die größer als 200 sind. Lassen Sie sich die Artikelnummer, die Anzahl der Bestellungen eines Artikels sowie die Gesamtbestellsumme anzeigen.
-- Nennen Sie die Spalten der Ergebnistabelle Artikelnummer, Artikelanzahl und Gesamtbestellsumme. Benutzen Sie eine Gruppierung.

SELECT artikelnummer,
       artikelanzahl,
       Sum(bestellsumme * artikelanzahl) AS Gesamtbestellsumme
FROM   bestellung
GROUP  BY artikelnummer
HAVING Sum(bestellsumme * artikelanzahl) > 200; 

+---------------+---------------+--------------------+
| Artikelnummer | Artikelanzahl | Gesamtbestellsumme |
+---------------+---------------+--------------------+
|             3 |             1 |             300.00 |
|             5 |             5 |           12500.00 |
+---------------+---------------+--------------------+

--(2)Ermitteln Sie aus allen Artikeln der Tabelle 'artikel' den Durchschnittspreis aller Artikel eines Herstellers.
--Berücksichtigen Sie dabei nur die Hersteller, die mehrere Artikel anbieten. Lassen Sie sich die Herstellernummer und den Durchschnittspreis anzeigen. 
--Nennen Sie die Spalten der Ergebnistabelle Herstellernummer und Durchschnittspreis. Benutzen sie eine Gruppierung

SELECT herstellernummer,
       Avg(preis) AS Durchschnittspreis
FROM   artikel
GROUP  BY herstellernummer
HAVING Count(*) > 1; 

+------------------+--------------------+
| herstellernummer | Durchschnittspreis |
+------------------+--------------------+
|               10 |          15.000000 |
+------------------+--------------------+

--Formatiert mit https://www.dpriver.com/pp/sqlformat.htm

--LJ 8

--Übung 3.8.1

--(1)Lassen Sie sich alle Artikelnamen und alle dazugehörigen Informationen über den Artikelhersteller, sortiert nach Artikelnamen, anzeigen. 
--Benutzen Sie zur Tabellenverknüpfung die WHERE-Klausel. Benutzen Sie außerdem den Aliasnamen a für die Tabelle 'artikel' und den Aliasnamen h für die Tabelle 'hersteller'.

SELECT a.artikelname,
       h.herstellernummer,
       h.herstellername,
	   h.land
FROM   artikel AS a,
       hersteller AS h
WHERE  a.herstellernummer = h.herstellernummer
ORDER  BY a.artikelname; 

+-------------+------------------+-----------------+---------+
| artikelname | herstellernummer | herstellername  | land    |
+-------------+------------------+-----------------+---------+
| Drucker     |               50 | Hewlett Packard | USA     |
| Festplatte  |               30 | Maxtor          | USA     |
| Maus        |               10 | Logitech        | Schweiz |
| Monitor     |               20 | SONY            | Japan   |
| Tastatur    |               10 | Logitech        | Schweiz |
+-------------+------------------+-----------------+---------+

--(2)Lassen Sie sich alle Namen, Preise und die zugehörigen Hersteller für Artikel anzeigen, deren Preis höher als 200 ist. Nutzen Sie für die Tabellenverknüpfung die JOIN-Klausel. 
--Benutzen Sie außerdem den Aliasnamen a für die Tabelle 'artikel' und den Aliasnamen h für die Tabelle 'hersteller'

SELECT a.artikelname,
       a.preis,
       h.herstellername
FROM   artikel AS a
       JOIN hersteller AS h
         ON a.herstellernummer = h.herstellernummer
WHERE  a.preis > 200
ORDER  BY a.artikelname; 

+-------------+--------+-----------------+
| artikelname | preis  | herstellername  |
+-------------+--------+-----------------+
| Drucker     | 300.00 | Hewlett Packard |
| Festplatte  | 400.00 | Maxtor          |
| Monitor     | 500.00 | SONY            |
+-------------+--------+-----------------+


--Übung 3.8.2

--(1)Lassen Sie sich zu jedem Bestellvorgang in der angegebenen Reihenfolge folgende Daten anzeigen: 
-- Bestellnummer, Nachname und Vorname des Kunden, Artikelanzahl und Bestellsumme.

SELECT b.bestellnummer,
       p.nachname,
       p.vorname,
       b.artikelanzahl,
       b.bestellsumme
FROM   person AS p,
       bestellung AS b
WHERE  p.personennummer = b.kundennummer
ORDER  BY b.bestellnummer;

--Personennummer = Kundennummer ??

+---------------+---------------+---------+---------------+--------------+
| bestellnummer | nachname      | vorname | artikelanzahl | bestellsumme |
+---------------+---------------+---------+---------------+--------------+
|             1 | Virtanen      | Veera   |             2 |        20.00 |
|             2 | Blotzek       | Ulrich  |             1 |        20.00 |
|             3 | Schatter      | Peter   |             3 |        30.00 |
|             4 | Wojack        | Albert  |             1 |       300.00 |
|             5 | Hämäläinen    | Ahvo    |             5 |      2500.00 |
+---------------+---------------+---------+---------------+--------------+

--(2)Welche Kunden haben mehr als 2 Artikel bestellt? Lassen Sie sich die Bestellnummer, Vor- und Nachname des Kunden, Artikelname, Artikelanzahl und Artikelpreis anzeigen.

SELECT b.bestellnummer,
       p.vorname,
       p.nachname,
       a.artikelname,
       b.artikelanzahl,
       a.preis
FROM   bestellung AS b
       JOIN person AS p
         ON b.kundennummer = p.personennummer
       JOIN artikel AS a
         ON b.artikelnummer = a.artikelnummer
WHERE  b.artikelanzahl > 2
ORDER  BY b.bestellnummer; 

+---------------+---------+---------------+-------------+---------------+--------+
| bestellnummer | vorname | nachname      | artikelname | artikelanzahl | preis  |
+---------------+---------+---------------+-------------+---------------+--------+
|             3 | Peter   | Schatter      | Maus        |             3 |  10.00 |
|             5 | Ahvo    | Hämäläinen    | Monitor     |             5 | 500.00 |
+---------------+---------+---------------+-------------+---------------+--------+

--(3)Welche Kunden haben Artikel bestellt, die in Japan hergestellt werden?
-- Lassen Sie sich Nachname und Vorname des Kunden, Artikelname, Herstellername sowie das Herstellerland anzeigen.

SELECT p.nachname,
       p.vorname,
       a.artikelname,
       h.herstellername,
       h.land
FROM   person AS p
       JOIN bestellung AS b
         ON p.personennummer = b.kundennummer
       JOIN artikel AS a
         ON b.artikelnummer = a.artikelnummer
       JOIN hersteller AS h
         ON a.herstellernummer = h.herstellernummer
WHERE  h.land = 'Japan'; 

+---------------+---------+-------------+----------------+-------+
| Nachname      | vorname | artikelname | herstellername | land  |
+---------------+---------+-------------+----------------+-------+
| Hämäläinen    | Ahvo    | Monitor     | SONY           | Japan |
+---------------+---------+-------------+----------------+-------+

--(4)Überprüfen Sie, ob Kunden aus Forssa Geräte von einem Hersteller aus Japan bestellt haben.
-- Lassen Sie sich Nachname, Vorname und Wohnort des Kunden, den Artikelnamen sowie das Herstellerland anzeigen.

SELECT p.nachname,
       p.vorname,
	   p.ort,
       a.artikelname,
       h.land
FROM   person AS p
       JOIN bestellung AS b
         ON p.personennummer = b.kundennummer
       JOIN artikel AS a
         ON b.artikelnummer = a.artikelnummer
       JOIN hersteller AS h
         ON a.herstellernummer = h.herstellernummer
WHERE  p.ort = 'Forssa' 
AND    h.land = 'Japan'; 

+---------------+---------+--------+-------------+-------+
| nachname      | vorname | ort    | artikelname | land  |
+---------------+---------+--------+-------------+-------+
| Hämäläinen    | Ahvo    | Forssa | Monitor     | Japan |
+---------------+---------+--------+-------------+-------+

--(5)Lassen Sie sich die vollständigen Daten aller Kunden anzeigen, die einen Artikel vom Hersteller Logitech bestellt haben.

SELECT p.*
FROM   person AS p
       JOIN bestellung AS b
         ON p.personennummer = b.kundennummer
       JOIN artikel AS a
         ON b.artikelnummer = a.artikelnummer
       JOIN hersteller AS h
         ON a.herstellernummer = h.herstellernummer
WHERE  h.herstellername = 'Logitech';

+----------------+----------+---------+--------------------+----------+-------+-------------+--------------+
| personennummer | nachname | vorname | strasse            | ort      | plz   | land        | geburtsdatum |
+----------------+----------+---------+--------------------+----------+-------+-------------+--------------+
|              4 | Virtanen | Veera   | Oyi Keilasatama 21 | Espoo    |  2150 | Finnland    | 1992-12-30   |
|              1 | Blotzek  | Ulrich  | Großkopf 4         | Arnsberg | 59823 | Deutschland | 1960-10-05   |
|              2 | Schatter | Peter   | Försterstrasse 56  | Augsburg | 86179 | Deutschland | 1980-01-01   |
+----------------+----------+---------+--------------------+----------+-------+-------------+--------------+


--Übung 3.8.3

--(1)Ermitteln Sie aus der Tabelle 'person' den Nachnamen und das Geburtsdatum der jüngsten Person. Nennen Sie die Spalten der Ergebnistabelle Name und Geburtsdatum.

SELECT nachname     AS NAME,
       geburtsdatum AS Geburtsdatum
FROM   person
WHERE  geburtsdatum = (SELECT Max(geburtsdatum)
                       FROM   person);
-- Wichtig: Max geburtsdatum ist das größte Datum = die jüngste Person!

--(2)Ermitteln Sie aus der Tabelle 'artikel' den Namen und den Preis des billigsten Artikels. Nennen Sie die Spalten der Ergebnistabelle Artikel und Preis.

SELECT artikelname AS Artikel,
       preis       AS Preis
FROM   artikel
WHERE  preis = (SELECT Min(preis)
                FROM   artikel); 
				
+---------+-------+
| Artikel | Preis |
+---------+-------+
| Maus    | 10.00 |
+---------+-------+


--(3)Ermitteln Sie mithilfe der Tabellen 'bestellung', 'artikel' und 'person' die Bestellung mit der höchsten Bestellsumme.
--Lassen Sie sich den dazugehörigen Nachnamen des Kunden, den Artikelnamen und die Bestellsumme anzeigen. Nennen Sie die Spalten der Ergebnistabelle Name, Artikel und Bestellsumme.

SELECT p.nachname     AS NAME,
       a.artikelname  AS Artikel,
       b.bestellsumme AS Bestellsumme
FROM   person AS p
       JOIN bestellung AS b
         ON p.personennummer = b.kundennummer
       JOIN artikel AS a
         ON b.artikelnummer = a.artikelnummer
WHERE  b.bestellsumme = (SELECT Max(bestellsumme)
                         FROM   bestellung); 
						 
+---------------+---------+--------------+
| Name          | Artikel | Bestellsumme |
+---------------+---------+--------------+
| Hämäläinen    | Monitor |      2500.00 |
+---------------+---------+--------------+

